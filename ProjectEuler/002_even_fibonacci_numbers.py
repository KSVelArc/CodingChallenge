"""
Even Fibonacci numbers
https://projecteuler.net/problem=2

Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""
import time
t0 = time.time()

fib_nums = [1,2]
new = 0

while new < 4000000:
    new = fib_nums[-2] + fib_nums[-1]
    if new < 4000000:
        fib_nums.append(new)

even_fib_nums = [a for a in fib_nums if a % 2 == 0]

t1 = time.time()

print("Fibonacci numbers smaller than 4-million:\n {}".format(fib_nums))
print("Even Fibonacci numbers smaller than 4-million:\n {}".format(even_fib_nums))
print("Sum of the even Fibonacci numbers smaller than 4-million:\n {}".format(sum(even_fib_nums)))


print('\ntime:', t1-t0)

#print('\nAnswer = 4613732')

